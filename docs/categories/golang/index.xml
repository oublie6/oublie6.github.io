<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Golang - Category - Oublie的Hugo博客</title>
        <link>https://oublie6.github.io/categories/golang/</link>
        <description>Golang - Category - Oublie的Hugo博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>313166062@qq.com (oublie)</managingEditor>
            <webMaster>313166062@qq.com (oublie)</webMaster><lastBuildDate>Sat, 28 Jan 2023 17:18:14 &#43;0800</lastBuildDate><atom:link href="https://oublie6.github.io/categories/golang/" rel="self" type="application/rss+xml" /><item>
    <title>go第三方库-Ants</title>
    <link>https://oublie6.github.io/posts/golang/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/ants/</link>
    <pubDate>Sat, 28 Jan 2023 17:18:14 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/ants/</guid>
    <description><![CDATA[godoc github官网 github中文文档 ants是一个开源的go协程池(goruntine池)。使用很方便。 简单使用 使用ants默认的协程池 1]]></description>
</item>
<item>
    <title>golang-杂记-协程池</title>
    <link>https://oublie6.github.io/posts/golang/%E6%9D%82%E8%AE%B0/%E5%8D%8F%E7%A8%8B%E6%B1%A0/</link>
    <pubDate>Sat, 28 Jan 2023 17:06:07 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E6%9D%82%E8%AE%B0/%E5%8D%8F%E7%A8%8B%E6%B1%A0/</guid>
    <description><![CDATA[CSDN 恋喵大鲤鱼 由于go中协程间通过channel通信，所以协程池也是基于channel的。正如CSP思想，每个协程通过channel通信实现任]]></description>
</item>
<item>
    <title>go标准库-Sync</title>
    <link>https://oublie6.github.io/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/sync/</link>
    <pubDate>Sat, 28 Jan 2023 11:00:27 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/sync/</guid>
    <description><![CDATA[go语言中文网 godoc go语言中文网有很多文档缺少内容比如string.Builder就没有，godoc绝对详尽，推荐阅读godoc type Once 使用该类型]]></description>
</item>
<item>
    <title>golang-杂记-面向对象理解interface</title>
    <link>https://oublie6.github.io/posts/golang/%E6%9D%82%E8%AE%B0/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%90%86%E8%A7%A3interface/</link>
    <pubDate>Sat, 28 Jan 2023 10:49:58 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E6%9D%82%E8%AE%B0/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%90%86%E8%A7%A3interface/</guid>
    <description><![CDATA[golang修养之路 理解interface interface 是方法声明的集合 任何类型的对象实现了在interface 接口中声明的全部方法，则表明该类型实现了]]></description>
</item>
<item>
    <title>golang-杂记-Sync.map实现方式</title>
    <link>https://oublie6.github.io/posts/golang/%E6%9D%82%E8%AE%B0/sync.map%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</link>
    <pubDate>Wed, 25 Jan 2023 21:15:46 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E6%9D%82%E8%AE%B0/sync.map%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</guid>
    <description><![CDATA[CSDN 一把把把把住了 read 和 dirty 两个字段将读写分离 读取时会先查询 read，不存在再查询 dirty，写入时则只写入 dirty 读取 read 并不需要加锁，而读或写 dirty 都需要]]></description>
</item>
<item>
    <title>golang-杂记-内存逃逸和内存泄露</title>
    <link>https://oublie6.github.io/posts/golang/%E6%9D%82%E8%AE%B0/%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%E5%92%8C%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/</link>
    <pubDate>Wed, 11 Jan 2023 11:51:00 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E6%9D%82%E8%AE%B0/%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%E5%92%8C%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/</guid>
    <description><![CDATA[go程序员面试笔试宝典 腾讯云 素履coder 内存逃逸 Go语言编译器通过分析代码来决定将变量分配到何处 如果函数外部没有引用，则优先放到栈中，栈空]]></description>
</item>
<item>
    <title>go第三方库-Modd</title>
    <link>https://oublie6.github.io/posts/golang/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/modd/</link>
    <pubDate>Tue, 10 Jan 2023 11:01:07 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/modd/</guid>
    <description><![CDATA[godoc github 官方文档 Modd 是一种开发人员工具，可触发命令并管理守护进程以响应文件系统更改。 安装 1 go install github.com/cortesi/modd/cmd/modd@latest 使用 go项目热重载主要使用文件监视模式，即文件修改]]></description>
</item>
<item>
    <title>go第三方库-Go Queue</title>
    <link>https://oublie6.github.io/posts/golang/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/go-queue/</link>
    <pubDate>Mon, 09 Jan 2023 20:34:31 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/go-queue/</guid>
    <description><![CDATA[godoc godoc官方文档 github官方文档 example见github dq consumer example 1 2 3 4 5 6 7 8 9 consumer := dq.NewConsumer(dq.DqConf{ Redis: redis.RedisConf{ Host: &#34;localhost:6379&#34;, Type: redis.NodeType, }, }) consumer.Consume(func(body []byte) { fmt.Println(string(body)) }) producer example 1 2 3 4 5 6]]></description>
</item>
<item>
    <title>golang-go-zero-官方博客</title>
    <link>https://oublie6.github.io/posts/golang/go-zero/%E5%AE%98%E6%96%B9%E5%8D%9A%E5%AE%A2/</link>
    <pubDate>Sun, 08 Jan 2023 16:45:15 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/go-zero/%E5%AE%98%E6%96%B9%E5%8D%9A%E5%AE%A2/</guid>
    <description><![CDATA[go-zero官网 go-zero官网博客 缓存设计 持久层缓存 缓存只删除不更新 行记录始终只存储一份，即主键对应行记录 唯一索引仅缓存主键值，不直接]]></description>
</item>
<item>
    <title>golang-go-zero-微服务实践-微服务实战系列</title>
    <link>https://oublie6.github.io/posts/golang/go-zero/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E8%B7%B5/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97/</link>
    <pubDate>Sun, 08 Jan 2023 15:57:04 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/go-zero/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E8%B7%B5/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97/</guid>
    <description><![CDATA[go-zero官网 go-zero详细文档 本系列为作者阅读公众号微服务实践的文章做的笔记 原文地址 工程结构 每个服务目录下我们又会分为多个服务，主]]></description>
</item>
</channel>
</rss>
