<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Oublie的Hugo博客</title>
        <link>https://oublie6.github.io/</link>
        <description>Oublie的Hugo博客,hugo,golang,mysql,微服务</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>313166062@qq.com (oublie)</managingEditor>
            <webMaster>313166062@qq.com (oublie)</webMaster><lastBuildDate>Tue, 14 Mar 2023 19:22:41 &#43;0800</lastBuildDate>
            <atom:link href="https://oublie6.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>数据结构与算法-刷题-Leetcode</title>
    <link>https://oublie6.github.io/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%88%B7%E9%A2%98/leetcode/</link>
    <pubDate>Tue, 14 Mar 2023 19:22:41 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%88%B7%E9%A2%98/leetcode/</guid>
    <description><![CDATA[8. 字符串转换整数 (atoi) 简单模拟，打败双百 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 func myAtoi(s string) int { s=strings.TrimSpace(s) if s==&#34;&#34;{return 0} nagative:=false if s[0]==&#39;-&#39;||s[0]==&#39;+&#39;{ if s[0]==&#39;-&#39;{nagative=true} s=s[1:] } ans:=0 for _,v:=range s{ if !unicode.IsDigit(v){break} ans=ans*10+int(v-&#39;0&#39;) if ans&gt;math.MaxInt32{break} } if nagative{ans=-ans} if ans&gt;math.MaxInt32{ans=math.MaxInt32} if ans&lt;math.MinInt32{ans=math.MinInt32} return]]></description>
</item>
<item>
    <title>数据结构与算法-刷题-每日一题</title>
    <link>https://oublie6.github.io/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%88%B7%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</link>
    <pubDate>Sat, 11 Mar 2023 13:36:15 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%88%B7%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</guid>
    <description><![CDATA[leetcode 官网 面试题 17.05. 字母与数字 前缀和+哈希表优化查询 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 func findLongestSubarray(array []string) []string { l:=len(array) presum:=make([]int,l+1) sum:=0 for i,v:=range array{ if unicode.IsDigit(rune(v[0])){ sum++ }else{sum--} presum[i+1]=sum]]></description>
</item>
<item>
    <title>数据结构与算法-刷题-剑指offer</title>
    <link>https://oublie6.github.io/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%88%B7%E9%A2%98/%E5%89%91%E6%8C%87offer/</link>
    <pubDate>Sat, 11 Mar 2023 13:29:32 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%88%B7%E9%A2%98/%E5%89%91%E6%8C%87offer/</guid>
    <description><![CDATA[leetcode 剑指offer leetcode 剑指offer 专项突击 leetcode 剑指 Offer II 111. 计算除法 官方题解为bfs，floyd算法和带权并查集 我这里使用dfs+回溯优化，耗时0m]]></description>
</item>
<item>
    <title>go标准库-Time</title>
    <link>https://oublie6.github.io/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/time/</link>
    <pubDate>Sat, 11 Mar 2023 11:20:47 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/time/</guid>
    <description><![CDATA[go语言中文网 godoc go语言中文网有很多文档缺少内容比如string.Builder就没有，godoc绝对详尽，推荐阅读godoc time包提供]]></description>
</item>
<item>
    <title>go标准库-Bytes</title>
    <link>https://oublie6.github.io/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/bytes/</link>
    <pubDate>Sat, 11 Mar 2023 10:39:59 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/bytes/</guid>
    <description><![CDATA[go语言中文网 godoc go语言中文网有很多文档缺少内容比如string.Builder就没有，godoc绝对详尽，推荐阅读godoc bytes包实]]></description>
</item>
<item>
    <title>golang-杂记</title>
    <link>https://oublie6.github.io/posts/golang/%E6%9D%82%E8%AE%B0/</link>
    <pubDate>Sat, 11 Mar 2023 09:50:34 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/golang/%E6%9D%82%E8%AE%B0/</guid>
    <description><![CDATA[面向对象理解interface golang修养之路 理解interface interface 是方法声明的集合 任何类型的对象实现了在interface 接口中声明]]></description>
</item>
<item>
    <title>杂项-个人笔记</title>
    <link>https://oublie6.github.io/posts/%E6%9D%82%E9%A1%B9/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Fri, 10 Mar 2023 12:38:15 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/%E6%9D%82%E9%A1%B9/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[保持窗口最前神器DeskPins DeskPins官网 windows下保持窗口最前是一个很常用的需求，但是windows并没有实现这个需求，只]]></description>
</item>
<item>
    <title>机器学习-深度学习-Pytorch</title>
    <link>https://oublie6.github.io/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/pytorch/</link>
    <pubDate>Thu, 09 Mar 2023 16:22:35 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/pytorch/</guid>
    <description><![CDATA[pytorch官网 pytorch教程 教程 tensors张量 张量是一种特殊的数据结构，与数组和矩阵非常相似 使用张量对模型的输入和输出以及模型的]]></description>
</item>
<item>
    <title>Python-第三方库-Pandas</title>
    <link>https://oublie6.github.io/posts/python/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/pandas/</link>
    <pubDate>Sun, 05 Mar 2023 17:48:46 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/python/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/pandas/</guid>
    <description><![CDATA[PYPI官网 pandas官网 pandas API文档 pandas 提供快速、灵活和富有表现力的数据结构，旨在使处理“关系”或“标记”数据简单又直观 安装 anaconda 1 conda install pandas pip 1]]></description>
</item>
<item>
    <title>Python-第三方库-Numpy</title>
    <link>https://oublie6.github.io/posts/python/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/numpy/</link>
    <pubDate>Sat, 04 Mar 2023 22:48:48 &#43;0800</pubDate>
    <author>oublie</author>
    <guid>https://oublie6.github.io/posts/python/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/numpy/</guid>
    <description><![CDATA[PYPI官网 numpy官网 numpy官方教程 numpy官网API文档 本文中的np表示numpy包的别名 NumPy 是 Python 中科学计算的基础包。提供多维数组]]></description>
</item>
</channel>
</rss>
